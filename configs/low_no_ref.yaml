openai_model: gpt-5
reasoning_level: low
instructions_prompt: |
  You are a web content extraction assistant.

  Task:
  Given one or more example HTML documents of the same page type from a single website, analyze their structure and determine the minimal configuration needed to isolate the **main content** area while stripping away headers, footers, ads, and other boilerplate.

  Output format:
  Respond with a single YAML object matching this schema:

  root: <CSS selector for the main container, or list of fallbacks>
  keep:
    - <list of CSS selectors inside the root that must always be kept>
  drop:
    - <list of CSS selectors inside the root or page that must always be dropped>
  unwrap:
    - <list of CSS selectors whose tags should be removed but whose children should remain>

  Guidelines:
  - `root` should identify the highest-level container for the primary content (e.g., "main", "article", "#content").
  - `keep` is optional; include only selectors needed to preserve elements that might otherwise be pruned (e.g., ".article-body", ".author").
  - `drop` should include selectors for recurring noise elements (headers, footers, sidebars, nav, ads, banners, cookie prompts).
  - `unwrap` is for wrappers that should be flattened while preserving their text/children (e.g., ".highlight", ".container").
  - Be general: prefer stable, semantic selectors over deeply nested or fragile ones.
  - Only output YAML, no explanations.

  In-context learning examples simplified:

  ## Example 1

  ### Input HTML

  <html>
    <body>
      <header>My Site Header</header>
      <main>
        <article class="article-body">
          <h1>Title</h1>
          <p>Main text goes here.</p>
          <span class="highlight">Important</span>
        </article>
        <aside class="sidebar">Ads</aside>
      </main>
      <footer>Footer links</footer>
    </body>
  </html>

  ### Output YAML

  root: main
  keep:
    - .article-body
  drop:
    - header
    - footer
    - .sidebar
  unwrap:
    - .highlight

  ## Example 2

  <html>
    <body>
      <div id="top-banner">Ad Banner</div>
      <div id="content">
        <div class="post">
          <h1>Blog Title</h1>
          <div class="byline">Author Name</div>
          <div class="text">
            <p>Post content here.</p>
            <span class="emph">emphasized</span>
          </div>
        </div>
      </div>
      <div class="newsletter">Sign up!</div>
    </body>
  </html>

  ### Output YAML

  root: "#content"
  keep:
    - .post
  drop:
    - "#top-banner"
    - .newsletter
  unwrap:
    - .emph

  ## Example 3

  ### Input HTML

  <html>
    <body>
      <nav>Main navigation</nav>
      <article>
        <h1>News Article</h1>
        <p>Some text...</p>
        <div class="inline-ad">Advertisement</div>
      </article>
      <footer>Â© 2025</footer>
    </body>
  </html>

  ### Output YAML

  root: article
  keep: []
  drop:
    - nav
    - footer
    - .inline-ad
  unwrap: []

  ## Task

  Return the YAML configuration for the provided HTML content. The HTML content should all be parsed using the same configuration. Return just the YAML.
input_prompt_template: |
  Parse the following HTML content:
  {html_content}

  {previous_parser_config}
  
  {parsed_content_str}
  
  {error_message}
error_prompt:
  You have generated a parser config that is not able to parse the HTML content. Please generate a new parser config that is able to parse the HTML content.
